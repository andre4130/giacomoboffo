[{"C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\projects\\Projects.jsx":"1","C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\App.js":"2","C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\header\\Header.jsx":"3","C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\about\\About.jsx":"4","C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\index.js":"5","C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\testing\\Testing.jsx":"6"},{"size":2593,"mtime":1607016552450,"results":"7","hashOfConfig":"8"},{"size":2835,"mtime":1607017791341,"results":"9","hashOfConfig":"8"},{"size":1347,"mtime":1606999651613,"results":"10","hashOfConfig":"8"},{"size":5239,"mtime":1606999825690,"results":"11","hashOfConfig":"8"},{"size":199,"mtime":1606178024036,"results":"12","hashOfConfig":"8"},{"size":1160,"mtime":1606832826382,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bysuf8",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},"C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\projects\\Projects.jsx",["28","29"],"C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\App.js",["30","31"],"C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\header\\Header.jsx",[],"C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\about\\About.jsx",[],"C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\andre4130\\Desktop\\01.ITACADEMY\\02.PROYECTOS\\GiacomoBoffo\\giacomoboffo\\frontend\\src\\components\\testing\\Testing.jsx",["34"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Testing = () => {\r\n\r\n    const [testing, setTesting] = useState({ testing: [], page: \"1\", totalPages: '', isLoaded: false })\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n\r\n          if(testing.totalPages === \"\"){\r\n            console.log(\"nothing yet\")\r\n          }else{\r\n            for (let index = 1; index < testing.totalPages+1; index++) {\r\n                \r\n            \r\n              const urlProjects = `http://giacomoboffoapi/wp-json/wp/v2/experience?page=${index}`;\r\n        \r\n              const [resTesting] = await Promise.all([\r\n                axios(urlProjects)\r\n              ]);\r\n            \r\n              setTesting([{...testing, testing: resTesting.data, page: index, totalPages: resTesting.headers['x-wp-totalpages'], isLoaded: true }]);   \r\n            \r\n            }\r\n          }\r\n           };\r\n        fetchData();\r\n    \r\n      }, [[],testing]);\r\n\r\n      console.log(testing)  \r\n\r\n\r\n    return (\r\n        <div style={{\"display\": \"null\"}}>\r\n            i'm testing\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Testing;",{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":14},{"ruleId":"35","severity":1,"message":"39","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":14},{"ruleId":"35","severity":1,"message":"40","line":12,"column":8,"nodeType":"37","messageId":"38","endLine":12,"endColumn":15},{"ruleId":"41","severity":1,"message":"42","line":47,"column":6,"nodeType":"43","endLine":47,"endColumn":8,"suggestions":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"41","severity":1,"message":"49","line":31,"column":11,"nodeType":"43","endLine":31,"endColumn":13},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Testing' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clients', 'data', 'events', and 'experience'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.","ArrayExpression",["50"],"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.",{"desc":"53","fix":"54"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [clients, data, events, experience]",{"range":"55","text":"56"},[2325,2327],"[clients, data, events, experience]"]